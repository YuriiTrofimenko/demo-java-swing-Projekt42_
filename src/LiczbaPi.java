
import java.awt.Color;
import java.awt.Graphics;
import java.util.Random;
import javax.swing.JPanel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Я
 */
public class LiczbaPi extends javax.swing.JFrame {

    PanelGraficzny panel = new PanelGraficzny();

    public LiczbaPi() {
        initComponents();
        setSize(500, 500);
        panel.setBounds(20, 20, 500, 500);
        add(panel);
    }

    class PanelGraficzny extends JPanel {

        Random r = new Random();

        protected void paintComponent(Graphics g) {
            // радиус окружности - половина стороны квадрата 
            int R = 100;
            // количество точек, которые будут нарисованы в квадрате
            int maxP = 25000;
            // счетчик точек, которые попадут внутрь окружности
            int ls = 0;
            // переход в координаты начала рисования квадрата
            // (верхний левый угол квадрата отступает от верхней и левой сторон
            // экрана на 50 пикселов)
            g.translate(50, 50);
            // рисование всех точек
            for (int lp = 0; lp < maxP; lp++) {
                // координата х равна стороне квадрата, умноженной на случайное
                // число от 0 до 1, то есть точка по горизонатли будет
                // расположена внутри квадрата в случайном месте
                double x = 2 * R * r.nextDouble(); // (x,y)– wylosowany punkt kwadratu
                // то же самое - по вертикали
                double y = 2 * R * r.nextDouble();
                // формула определения, находится ли точка внутри круга
                if ((x - R) * (x - R) + (y - R) * (y - R) <= R * R) { // punkt (x,y) leży w kole wpisanym w kwadrat
                    ls++;
                    g.setColor(Color.black); //warunkowe zwiększenie liczby sukcesów
                } else {
                    g.setColor(Color.white);
                }
                g.drawLine((int) x, (int) y, (int) x, (int) y); //rysowanie punktu
            }
            // смещение точки для начала рисования вниз и вправо
            g.translate(2 * R, 2 * R);
            // вывод количества нарисованных точек, попавших в круг точек,
            // и рассчитанного из размеров окружности числа пи 
            g.clearRect(0, 0, 250, 100);
            g.setColor(Color.red);
            g.drawString("Liczba wszystkich punktów = " + maxP, 20, 20);
            g.drawString("Liczba punktów w kole = " + ls, 20, 40);
            g.drawLine(20, 60, 200, 60);
            g.drawString("Liczba pi = " + 4.0 * ls / maxP, 20, 80);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LiczbaPi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LiczbaPi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LiczbaPi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LiczbaPi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LiczbaPi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
